@startuml

skinparam classAttributeFontSize 8
skinparam classArrowFontSize 9
skinparam classFontSize 10
skinparam nodesep 90
skinparam ranksep 40
hide stereotype
skinparam class {
	BackgroundColor White
	BackgroundColor<<Data>> LightYellow
	BackgroundColor<<User>> LightBlue
	BackgroundColor<<Rights>> LightGreen
	BackgroundColor<<Metadata>> LightPink
}

class Dataset <<Data>> {
	String title, description
	DateTime dateTime
	int flags
	boolean isBlocked
}
class DataFile <<Data>> extends Dataset {
	int downloads
}
class DataStream <<Data>> extends Dataset {
	int subscribers
}
Dataset "defines many" -right- "definedBy 1" Schema
class Schema <<Data>> {
	String title, description
}
Schema "partOf 1" -- "contains many" Field
class Record <<Data>> {
	String data
	DateTime timestamp
}
Record -- Dataset
class Field <<Data>> {
	String title, description
}
Field -- "type 1" FieldType
enum FieldType <<Data>> {
	String, Date, Time,
	DateTime, Integer,
	Float, E-Mail,
	Address, LatLong,...
}
class Tag <<Metadata>> {
	String text
}
Tag "taggedWith many" -- "tags many" Dataset
class Topic <<Metadata>> {
    String text
}
Topic "about many" -- "includes many" Dataset
Topic "containedBy many" -- "contains many" Tag
class License <<Rights>> {
	String text
}
class OpenLicense <<Rights>> extends License {
}
class ClosedLicense <<Rights>> extends License {
	Decimal price
}
License "governedBy 1" -- "governs many" Dataset
class Comment <<Metadata>> {
	String text
}
Comment "authors many" -- "creator 1" User
class DatasetComment <<Metadata>> extends Comment {
}
DatasetComment "subjectOf many" -- "1 about" Dataset
class TopicComment <<Metadata>> extends Comment {
	boolean isDatasetRequest
}
TopicComment "subjectOf many" -- "1 about" Topic
class User <<User>> {
	String username, email
}
class DataUser <<User>> extends User {
}
DataUser "downloadedBy many" -- "downloaded many" DataFile
DataUser "subscribedBy many" -- "subscribedTo many" DataStream
class DataOwner <<User>> extends User {
	boolean isVerified
}
Dataset "owns many" -left- "owner many" DataOwner
class Admin <<User>> extends User {
}

@enduml